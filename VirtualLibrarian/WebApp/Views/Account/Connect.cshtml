@section Styles {
    <style>
        html {
            width: 100%;
            height: 100%;
            position: fixed;
        }
        body {
            background-image: url(https://typeset-beta.imgix.net/lovelace/uploads/1712/e5a819d0-9e09-0134-1931-060e3e89e053.gif) !important;
            background-repeat: no-repeat !important;
            background-position: top center !important;
            background-size: cover !important;
        }

        .message {
            color: black;
            position: relative;
            top: 20%;
            font-size: 20px;
        }

        .cont {
            position: relative;
            height: 400px;
        }

        video#previewTake {
            margin: 0 auto;
            position: absolute;
            top: 60%;
            left: 0px;
            right: 0px;
            background: white;
            height: auto;
            padding: 7px;
            border-radius: 7px;
        }
    </style>
}
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="text-center message"></div>
                <div class="cont">
                    <video id="previewTake" width="400" height="400"></video>
                </div>
                <canvas id="snapCanvas" width="300" height="300" style="visibility: hidden;"></canvas>
                <canvas id="canvas" width="300" height="300"></canvas>
            </div>
        </div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/trackingjs")
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/webrtc-adapter/3.3.3/adapter.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.10/vue.min.js"></script>
    <script type="text/javascript" src="https://rawgit.com/schmich/instascan-builds/master/instascan.min.js"></script>
    <script type="text/javascript">
        var app = new Vue({
  el: '#app',
  data: {
    scanner: null,
    activeCameraId: null,
    cameras: [],
    scans: []
  },
  mounted: function () {
    var self = this;
    self.scanner = new Instascan.Scanner({ video: document.getElementById('previewTake'), scanPeriod: 3 });

      var video = document.getElementById('previewTake');
      var canvas = document.getElementById('canvas');
      var snapCanvas = document.getElementById('snapCanvas');
      var context = canvas.getContext('2d');
      var snapContext = snapCanvas.getContext('2d');
      var tracker = new tracking.ObjectTracker('face');
      var stopRequestAnimationFrame = false;
      tracker.setInitialScale(4);
      tracker.setStepSize(3);
      tracker.setEdgesDensity(0.1);
      const trackingTask = tracking.track('#previewTake', tracker, { camera: true });
      trackingTask.run();
        var dataURI = "";
        var timer = 0;

        var attempt = 0;
        var error = 0;

        tracker.on('track', function(event) {
        context.clearRect(0, 0, canvas.width, canvas.height);
        event.data.forEach(function(rect) {
            if(stopRequestAnimationFrame == false && timer == 0 && attempt <= 100) {
                timer = 1;
                snapContext.drawImage(video, rect.x + 80, rect.y, 250, 250, 0, 0, 300, 300);
                dataURI = snapCanvas.toDataURL('image/png');
                $.ajax({
                    url: "/Account/LoginBitmap",
                    data: { value: dataURI },
                    traditional: true,
                    type: 'post',
                    success: function (response) {
                        if (response.success) {
                            window.location.href = '/Dashboard';
                            stopRequestAnimationFrame = true;
                        } else if (response.err == 1) {
                            stopRequestAnimationFrame = true;
                            error = 1;
                        }
                        else {
                            attempt++;
                        }
                    },
                    error: function () {
                    }
                });
                setTimeout(function() {
                    timer = 0;
                    setTimeout(function () {
                        trackingTask.stop();
                        trackingTask.run();
                    }, 50);
                }, 500);
            }
            trackingTask.stop();

            if (attempt > 100 || error != 0) {
                window.location.href = '/Account';
                alert("User could not be recognised.");
                preventDefault();
                return;
            }
        });
      });

    Instascan.Camera.getCameras().then(function (cameras) {
      self.cameras = cameras;
      if (cameras.length > 0) {
        self.activeCameraId = cameras[0].id;
        self.scanner.start(cameras[0]);
      } else {
        console.error('No cameras found.');
      }
    }).catch(function (e) {
      console.error(e);
    });
  },
  methods: {
    formatName: function (name) {
      return name || '(unknown)';
    },
    selectCamera: function (camera) {
      this.activeCameraId = camera.id;
      this.scanner.start(camera);
    }
  }
});
    </script>
}